<?php

namespace Modules\Admin\Http\Controllers;

use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Redirect;
use App\Http\Requests;
use Illuminate\Http\Request;
use Modules\Admin\Http\Requests\BuildingRequest;
use Modules\Admin\Http\Requests\BuildingRentRequest;
use Modules\Admin\Models\User;
use Modules\Admin\Models\Group;
use Modules\Admin\Models\Building;
use Modules\Admin\Models\BuildingRent;
use Modules\Admin\Models\SystemAlertSearch;
use Modules\Admin\Models\SystemAlertSearchCategory;
use Modules\Admin\Models\SystemAlertSearchCity;
use Modules\Admin\Models\SystemAlertSearchType;
use Modules\Admin\Http\Requests\SystemAlertSearchRequest;
use Input;
use Validator;
use Auth;
use Paginate;
use Grids;
use HTML;
use Form;
use View;
use URL;
use Lang;
use App\Http\Controllers\Controller;
use App\Helpers\Helper as Helper;

/**
 * Class AdminController
 */
class SystemAlertSearchController extends Controller {
    /**
     * @var  Repository
     */

    /**
     * Displays all admin.
     *
     * @return \Illuminate\View\View
     */
    public function __construct() {
        $this->middleware('auth');
        View::share('viewPage', 'systemAlertSearch');
    }

    /*
     * Dashboard
     * */

    public function index(SystemAlertSearch $systemAlertSearch, Request $request) {

        $page_title = 'System Alert Search';
        $page_action = 'View System Alert Search';

        $results = SystemAlertSearch::all();

        $helper = new Helper;

        if (isset($_REQUEST['search']) && !empty($_REQUEST['search'])) {

            $search = $_REQUEST['search'];

            $results = SystemAlertSearch::Where('Email', 'LIKE', "%$search%")->get();
        }
        // dd($results);
        return view('packages::systemAlertSearch.index', compact('results', 'page_title', 'page_action'));
    }

    /*
     * create Group method
     * */

    public function create(SystemAlertSearch $systemAlertSearch) { 
        $page_title = 'Create System Alert Search';
        $page_action = 'View System Alert Search'; 
        return view('packages::systemAlertSearch.create', compact('systemAlertSearch', 'page_title', 'page_action'));
    }

    /*
     * Save Group method
     * */

    public function store(Request $request, SystemAlertSearch $systemAlertSearch) {

        $data =  Input::all();
            $validator =  Validator::make($data, [               
                'Email'      => 'required|email|max:255',
                'Disabled'   => 'required!numeric',
                'Min_price'  => '',
                'Max_price'             =>  'integer',
                'Min_rooms_number'      =>  'integer',
                'Min_bathroom_number'   =>  'integer',
                'Brand_new'             =>  'integer',
                'Free_tour'             =>  'integer',
                'Living_area_size'      =>  'integer',
                'Property_size'         =>  'integer',
                'Garage'                =>  'integer',
                'Pool'                  =>  'integer',
                'No_neighbors_behind'   =>  'integer',
            ]);
            if($validator->fails())
            {
                $errors = $validator->messages();  
                print_r(($errors->all()));
                exit();
            }
            else {
                $systemAlertSearch->fill(Input::all());
                $systemAlertSearch->save();
                return Redirect::to(route('systemAlertSearch'))
                        ->with('flash_alert_notice', 'Building Inclusion was successfully created !');
            }                 
    }

    /*
     * Edit Group method
     * */

    public function edit(SystemAlertSearch $systemAlertSearch) {

        $page_title = 'Create System Alert Search';
        $page_action = 'View System Alert Search';

        $data = SystemAlertSearchType::with(['systemAlertSearch', 'buildingType'])
                        ->where('AlertID', $systemAlertSearch->id)->get();

        $cityData = SystemAlertSearchCity::with(['systemAlertSearch', 'city'])
                        ->where('AlertID', $systemAlertSearch->id)->get();

        $catData = SystemAlertSearchCategory::with(['systemAlertSearch', 'BuildingCategory'])
                        ->where('AlertID', $systemAlertSearch->id)->get();
        // dd($catData[0]->BuildingCategory['NameFR']);       
        return view('packages::systemAlertSearch.edit', compact('catData', 'data', 'cityData', 'systemAlertSearch', 'page_title', 'page_action'));
    }

    public function update(SystemAlertSearchRequest $request, SystemAlertSearch $systemAlertSearch) {
        $data =  Input::all();
        
            $validator =  Validator::make($data, [               
                'Email'      => 'required|email|max:255',
                'Disabled'   => 'required',
                'Min_price'  => 'required|numeric',
                'Max_price'             =>  'required|numeric',
                'Min_rooms_number'      =>  'required|numeric',
                'Min_bathroom_number'   =>  'required|numeric',
                'Brand_new'             =>  'required|numeric',
                'Free_tour'             =>  'required|numeric',
                'Living_area_size'      =>  'required|numeric',
                'Property_size'         =>  'required|numeric',
                'Garage'                =>  'required|numeric',
                'Pool'                  =>  'required|numeric',
                'No_neighbors_behind'   =>  'required|numeric',
            ]);
            if($validator->fails())
            {
                $errors = $validator->messages();                  
                return Redirect::to(route('systemAlertSearch.edit',$data['alert_id']))->withErrors($validator);
                exit();
            }
            else
            {
                $systemAlertSearch->find($data['alert_id']);
                $systemAlertSearch->fill(Input::all());
                $systemAlertSearch->save();
                return Redirect::to(route('systemAlertSearch'))
                        ->with('flash_alert_notice', 'System Alert Search was successfully updated !');
            }
    }

    public function destroy(SystemAlertSearch $systemAlertSearch) {

        SystemAlertSearch::destroy($systemAlertSearch->id);

        return Redirect::to(route('systemAlertSearch'))
                        ->with('flash_alert_notice', 'System Alert Search was successfully deleted!');
    }

}
