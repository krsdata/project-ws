<?php

namespace App\Helpers;

use App\Http\Requests;
use Illuminate\Http\Request;
use Mail;
use Auth;
use Config;
use View;
use Input;
use session;
use Crypt;
use Hash;
use Menu;
use Html;
use Illuminate\Support\Str;
use App\User;
use Phoenix\EloquentMeta\MetaTrait; 
use Illuminate\Support\Facades\Lang;
use App\CorporateProfile;
use Validator; 
 

class Helper {

    /**
     * function used to check stock in kit
     *
     * @param = null
     */

    public function generateRandomString() {
        $randomString = mt_rand( 1000000 , 9999999 );
        return $randomString;
    } 

    public function createCompanyGroup($email=null,$user_id=null)
    {
        $request = new Request;
        $fps =  strripos($email,"@");
        $lps =  strpos(substr($email,$fps),".");
        $company_url = substr($email,$fps+1);
        $company_name = substr($email,$fps+1,$lps-1);
        
        //Server side valiation
        $validator = Validator::make(array('company_name'=>$company_name), [
            'company_name' => 'unique:t_corporate_profile',
           
        ]);
        // Return Error Message
        if ($validator->fails()) {
            $cp_record  = CorporateProfile::where('company_name',$company_name)
                            ->where('companyID',0)->get();
            $company_id      =  isset($cp_record[0]->id)?$cp_record[0]->id:'';
            $company_profile = new CorporateProfile;
            $company_profile->company_name =  $company_name;
            $company_profile->userID = $user_id;
            $company_profile->companyID =$company_id ;
            $company_profile->company_url = 'www.'.$company_url;
            $company_profile->user_email  = $email;
            $company_profile->save(); 
            return $company_name;

        }else{

            $company_profile = new CorporateProfile;
            $company_profile->company_name =  $company_name;
            $company_profile->userID = $user_id;
            $company_profile->companyID =0;
            $company_profile->company_url = $company_url;
            $company_profile->user_email  = $email;
            $company_profile->save();
            return $company_name;
        } 
    }

    public function getCorporateGroupName($email=null)
    {
        $fps =  strripos($email,"@");
        $lps =  strpos(substr($email,$fps),".");
        $company_name = substr($email,$fps+1,$lps-1);
        return  $company_name;       
    }

    
    public static function getPassword(){
        $password = "";
        $user = Auth::user();
        if(isset($user)){
            $password = Auth::user()->Password;
        }
        return $password;
    }
     
   
    
    public static function FormatPhoneNumber($number){
        return preg_replace('~.*(\d{3})[^\d]{0,7}(\d{3})[^\d]{0,7}(\d{4}).*~', '($1) $2-$3', $number). "\n";
    }
    
   
    
    public  function sendMailFrontEnd($email_content, $template, $template_content)
    {        
        $template_content['verification_token'] =  Hash::make($email_content['receipent_email']);
        $template_content['email'] = isset($email_content['receipent_email'])?$email_content['receipent_email']:'';
        
        return  Mail::send('emails.'.$template, array('content' => $template_content), function($message) use($email_content)
          {
            $name = "Udex";
            $message->from('udex@indianic.com',$name);  
            $message->to($email_content['receipent_email'])->subject($email_content['subject']);
            
          });
    }
}
